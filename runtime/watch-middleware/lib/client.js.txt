(function(options) {
  function _reload(delay) {
    setTimeout(function() {
      console.log("[watch] reloading page");
      window.location.reload();
    }, delay || 0);
  }

  function _handle(type, data) {
    if (type === "reload") {
      _reload(data && data.delay);
    } else if (type === "hash") {
      if (data && data.server && data.client) {
        if (hash) {
          if (hash.server !== data.server || hash.client !== data.client)
            _reload();
        }
        hash = data;
      } else {
        if (!hash)
          hash = {};  // reload when done
      }
    }
  }

  function _connect() {
    var socket = new WebSocket(options.serverUrl);

    socket.addEventListener("open", function() {
      retry = 0;
      console.log("[watch] connected");
    });

    socket.addEventListener("close", function() {
      console.log("[watch] closed");

      if (options.reconnect === undefined || options.reconnect) {
        var delay = Math.round(100 * Math.pow(Math.min(retry++, 7), 2) + Math.random() * 100);
        setTimeout(function() {
          console.log("[watch] retrying (" + retry + " / " + delay + "ms)");
          _connect();
        }, delay);
      }
    });

    socket.addEventListener("message", function(event) {
      var payload = JSON.parse(event.data);
      _handle(payload.type, payload.data);
    });
  }

  var retry = 0;
  var hash;

  _connect();
})(__GOURMET_WATCH_OPTIONS__);
